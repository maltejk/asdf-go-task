#!/usr/bin/env bash

set -euo pipefail

[ -z "${ASDF_INSTALL_TYPE+x}" ] && echo "ASDF_INSTALL_TYPE is required" && exit 1
[ -z "${ASDF_INSTALL_VERSION+x}" ] && echo "ASDF_INSTALL_VERSION is required" && exit 1
[ -z "${ASDF_INSTALL_PATH+x}" ] && echo "ASDF_INSTALL_PATH is required" && exit 1

install() {
  local install_type=$1
  [ "$install_type" != "version" ] && echo "install type, $install_type, is not supported" && exit 1

  local version=$2
  local install_path=$3

  local tool_name="task"
  local bin_install_path="$install_path/bin"
  local bin_path="${bin_install_path}/${tool_name}"

  local platform
  [ "Linux" = "$(uname)" ] && platform="linux" || platform="darwin"
  local arch
  [ "x86_64" = "$(uname -m)" ] && arch="amd64" || arch="386"

  local download_url
  download_url="https://github.com/go-task/task/releases/download/v${version}/${tool_name}_${platform}_${arch}.tar.gz"

  mkdir -p "${bin_install_path}"

  echo "Downloading go-task/task from ${download_url}"

  local tmpdir=$(mktemp -d)
  pushd $tmpdir
  STATUSCODE=$(curl -q --write-out "%{http_code}" -L -C - "$download_url" -o download.tar.gz)

  if test "${STATUSCODE}" -ne 200; then
    echo "Binary for version '${version}' was not found or could not be retrieved."
    exit 1
  else
    tar zxf download.tar.gz --strip-components=1 ${tool_name}
    mv ${tool_name} ${bin_path}
    chmod +x "$bin_path"
  fi
  popd
  rm -rf $tmpdir
}

install "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"

